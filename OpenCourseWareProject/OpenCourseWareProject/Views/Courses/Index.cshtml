@model X.PagedList.IPagedList<OpenCourseWareProject.Controllers.Course>
@using X.PagedList.Mvc;

@{
    /**/

    ViewBag.Title = "Index";
    ViewBag.Desc = "Choose Your Course";
    ViewBag.SubDesc = "Pick a course and start learning.";
    ViewBag.Img = "CourseIndex";
    ViewBag.ImgLocation = "/images/";
    ViewBag.ImgExtension = ".jpg";
}

<style>
    .pager {
        padding-left: 0;
        margin: 20px 0;
        text-align: center;
        list-style: none;
    }
    .pagination {
        text-align: center;
    }
    .pagination-container {
        text-align: center;
    }
</style>
<br />
<div class="row justify-content-center mb-5">
    <div class="col-md-7 text-center">
        <h2>Our Courses</h2>
        <p class="lead">Choose a course, and all relevent data will be provided.</p>
        <form action="" autocomplete="off" class="form-horizontal" method="post" accept-charset="utf-8">
            <div class="input-group">
                <input type="text" name="currentFilter" value="@ViewBag.currentFilter" class="search-text form-control" placeholder="Search..." />
                <span class="input-group-btn">
                    <button type="submit" class="btn btn-info">
                        <span class="icon-search">Search</span>
                    </button>
                </span>
            </div>
        </form>
    </div>
</div>

<div class="container">
    @if (Model.Count == 0)
    {
        <h3 style="text-align:center">
            No Record Found.....
        </h3>
        <br />
    }
    <div class="row top-course">
        @foreach (var item in Model)
        {
            <div class="col-lg-2 col-md-4 col-sm-6 col-12">
                <a href=@Url.Action("Details", "Courses", new { id=item.CId }) class="course">
                    <img src=@Html.DisplayFor(modelItem => item.ImagePath) alt="Image placeholder" onerror="this.src='/images/default.jpg'">
                    <h2 style="text-align:center">@Html.DisplayFor(modelItem => item.CourseTitle)</h2>
                </a>
            </div>
        }
    </div>
</div>

@if (Model.PageCount > 1)
{
    <div class="pager" style="text-align:center">
            @Html.PagedListPager(Model, page => Url.Action("Index", new
            {
                page,
                currentFilter = ViewBag.CurrentFilter
            }), X.PagedList.Mvc.Bootstrap4.Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
}
